{"version":3,"sources":["redux/actions/dataAction.js","redux/type.js","utils/ToolButton.js","components/scream/DeleteScream.js","components/scream/Comments.js","components/scream/CommentFrom.js","components/scream/LikeButton.js","components/scream/ScreamDialog.js","components/scream/Scream.js","redux/actions/userAction.js","components/profile/UpdateUserDetails.js","components/profile/Profile.js","pages/Home.js","pages/Login.js","pages/SignUp.js","components/scream/PostScream.js","components/layout/NavaBar.js","utils/AuthRoute.js","components/profile/StaticProfile.js","pages/User.js","redux/reducers/UserReducer.js","redux/reducers/uiReducer.js","redux/reducers/dataReducer.js","redux/store.js","App.js","utils/theme.js","serviceWorker.js","index.js","images/login.png"],"names":["clearErrors","dispatch","type","ToolButton","children","tip","btnClassName","tipClassName","onClick","place","Tooltip","title","className","placement","IconButton","connect","state","data","deleteScream","Screamid","axios","delete","then","res","payload","catch","err","console","log","withStyles","theme","spreadThis","deleteButton","position","left","top","classes","useState","open","setOpen","handleClose","color","Dialog","onClose","fullWidth","maxWidth","aria-labelledby","DialogTitle","id","DialogActions","Button","variant","commentImage","objectFit","borderRadius","comments","Grid","container","map","comment","createdAt","body","imageUrl","userHandle","key","visibaleSeparator","item","sm","src","alt","Typography","component","Link","varient","to","sepreator","dayjs","format","variabt","mapActionsToProps","commentOnScream","commentData","post","response","UI","authenticated","user","progressSpinner","errors","loading","setBody","style","textAlign","onSubmit","event","preventDefault","TextField","textfield","label","multiline","row","placeholder","value","helperText","error","onChange","target","likeScream","screamId","get","unlikeScream","LikeCount","likes","find","like","getScream","scream","closeButton","profileImage","spinnerDiv","marginTop","marginBottom","dialogContent","padding","likeCount","commentCount","griddialog","CircularProgress","size","thickness","spacing","DialogContent","card","display","image","minWidth","content","props","handle","credentials","extend","relativeTime","deletButton","Card","CardMedia","CardContent","fromNow","getUserData","signUp","userData","history","localStorage","setItem","token","defaults","headers","common","push","logOut","removeItem","updateUserDetails","userDetail","button","float","bio","setBio","location","setLocation","website","setWebsite","useEffect","updateState","uploadImage","formData","Skeleton","animation","width","height","Paper","paper","profile","hidden","files","FormData","append","name","document","getElementById","click","href","rel","align","buttons","getScreams","screams","disable","xs","loginUser","withStyle","email","setEmail","password","setPassword","form","LoginIcon","noValidate","autoComplete","general","progress","confirmPassword","setConfirmPassword","setHandle","postScream","screamData","submitButton","disabled","AppBar","Toolbar","Component","rest","render","setProfile","match","params","initialState","notifications","UserReducer","action","filter","uiReducer","dataReducer","index","findIndex","middleware","thunk","reducers","combineReducers","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","FBIdToken","JwtDecode","exp","Date","now","alert","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVarients","margin","pagetitle","border","borderBottom","verticalAlign","cursor","App","exact","path","Home","Login","SignUp","User","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.c0e4e398.chunk.js","sourcesContent":["import  {LOADING_DATA,\r\n    LOADING_UI,\r\n    CLEAR_ERRORS,\r\n    COMMENT_SCREAM,\r\n    UNCOMMENT_SCREAM,\r\n    LIKE_SCREAM,\r\n    UNLIKE_SCREAM,\r\n    SET_SCREAMS,\r\n    DELETE_SCREAM,\r\n    POST_SCREAM,\r\n    SET_ERRORS,\r\n    SET_SCREAM,\r\n    STOP_LOADING_UI\r\n} from '../type'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const deleteScream = (Screamid) => (dispatch) => {\r\n    \r\n    axios.delete(`https://us-central1-mysocialapp-92266.cloudfunctions.net/api/scream/${Screamid}`,Screamid)\r\n        .then(res => {\r\n        \r\n            dispatch({\r\n                type : DELETE_SCREAM,\r\n                payload : Screamid\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const getScreams = () => (dispatch) => {\r\n    dispatch({\r\n        type : LOADING_DATA\r\n    })\r\n    axios.get('https://us-central1-mysocialapp-92266.cloudfunctions.net/api/screams')\r\n     .then(res => {\r\n         dispatch({\r\n            type : SET_SCREAMS,\r\n            payload : res.data,\r\n         })\r\n     })\r\n     .catch(err => {\r\n        dispatch({\r\n            type : SET_SCREAMS,\r\n            payload : []\r\n         })\r\n     }) \r\n}\r\n\r\nexport const likeScream = (screamId) => (dispatch) => {\r\n    axios.get(`https://us-central1-mysocialapp-92266.cloudfunctions.net/api/scream/${screamId}/like`)\r\n        .then(res => {\r\n            dispatch({\r\n                type : LIKE_SCREAM,\r\n                payload : res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const unlikeScream = (screamId) => (dispatch) => {\r\n    \r\n    axios.get(`https://us-central1-mysocialapp-92266.cloudfunctions.net/api/scream/${screamId}/unlike`)\r\n        .then(res => {\r\n            dispatch({\r\n                type : UNLIKE_SCREAM,\r\n                payload : res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const postScream = (screamData) => (dispatch) => {\r\n    dispatch({type : LOADING_UI})\r\n    axios.post(`https://us-central1-mysocialapp-92266.cloudfunctions.net/api/postScreams`,screamData)\r\n        .then(res => {\r\n            dispatch({\r\n                type : POST_SCREAM,\r\n                payload : res.data\r\n            })\r\n            dispatch(clearErrors());\r\n        })\r\n        .catch(err => {\r\n           dispatch({\r\n               type : SET_ERRORS,\r\n               payload : err.response.data\r\n           })\r\n        })\r\n\r\n}\r\n\r\nexport const getScream = (Screamid) => (dispatch) => {\r\n    dispatch({type : LOADING_UI})\r\n    axios.get(`https://us-central1-mysocialapp-92266.cloudfunctions.net/api/scream/${Screamid}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type : SET_SCREAM,\r\n                payload : res.data\r\n\r\n            })\r\n            dispatch({ type: STOP_LOADING_UI });\r\n        })\r\n        .catch((err) => console.log(err));\r\n}\r\n\r\nexport const commentOnScream = (Screamid,commentData) => (dispatch) => {\r\n    axios.post(`https://us-central1-mysocialapp-92266.cloudfunctions.net/api/scream/${Screamid}/comment`,commentData)\r\n        .then(res => {\r\n            dispatch({\r\n                type : COMMENT_SCREAM,\r\n                payload : res.data\r\n            })\r\n            dispatch(clearErrors())\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SET_ERRORS,\r\n                payload : err.response.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n  };\r\n\r\n\r\n  export const getUserData = (handle) => (dispatch) => {\r\n    dispatch({type : LOADING_DATA})\r\n    axios.get(`https://us-central1-mysocialapp-92266.cloudfunctions.net/api/user/${handle}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type : SET_SCREAMS,\r\n                payload : res.data.screams\r\n            })\r\n            \r\n        })\r\n        .catch(err => {\r\n           dispatch({\r\n            type : SET_SCREAMS,\r\n            payload : null\r\n           })\r\n        })\r\n\r\n}","//User Reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED'\r\nexport const  SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED'\r\nexport const SET_USER = 'SET_USER'\r\nexport const LOADING_USER = 'LOADING_USER'\r\n\r\n//UI reducer types\r\nexport const  SET_ERRORS = 'SET_ERRORS'\r\nexport const  LOADING_UI = 'LOADING_UI'\r\nexport const  CLEAR_ERRORS = 'CLEAR_ERRORS'\r\nexport const  STOP_LOADING_UI = 'STOP_LOADING_UI'\r\n\r\n\r\n//Data reducer types\r\nexport const SET_SCREAMS = 'SET_SCREAMS'\r\nexport const LOADING_DATA = 'LOADING_DATA'\r\nexport const COMMENT_SCREAM = 'COMMENT_SCREAM'\r\nexport const UNCOMMENT_SCREAM = 'UNCOMMENT_SCREAM'\r\nexport const LIKE_SCREAM = 'LIKE_SCREAM'\r\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM'\r\nexport const DELETE_SCREAM = 'DELETE_SCREAM'\r\nexport const POST_SCREAM = 'POST_SCREAM'\r\nexport const SET_SCREAM = 'SET_SCREAM'\r\n\r\n\r\n\r\n","import React,{Fragment} from 'react'\r\n\r\nimport IconButton  from '@material-ui/core/IconButton'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nfunction ToolButton({children,tip,btnClassName,tipClassName,onClick,place}) {\r\n    return (\r\n        <Fragment>\r\n            <Tooltip title = {tip} className={tipClassName} placement={place}>\r\n                <IconButton className = {btnClassName} onClick={onClick}>\r\n                    {children}\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ToolButton\r\n","import React ,{Fragment,useState} from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport {connect} from 'react-redux'\r\nimport {deleteScream } from '../../redux/actions/dataAction'\r\n\r\n\r\n\r\n//Dialog\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//icons\r\n\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'\r\nimport ToolButton from '../../utils/ToolButton'\r\n\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.spreadThis,\r\n    deleteButton: {\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '10%'\r\n      }\r\n})\r\nfunction DeleteScream({classes,Screamid,deleteScream}) {\r\n    const [open, setOpen] = useState(false)\r\n    \r\n    \r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        deleteScream(Screamid)\r\n        setOpen(false)\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <ToolButton tip= 'Delete Scream' place = 'top' btnClassName= {classes.deleteButton} onClick = {handleClickOpen}>\r\n                <DeleteOutline color='secondary'></DeleteOutline>\r\n            </ToolButton>\r\n            <Dialog open={open} onClose={handleClose} fullWidth\r\n                maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Are you sure you want to delete scream?</DialogTitle>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" onClick={handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDelete} color=\"secondary\">\r\n                    Delete\r\n                </Button>\r\n            </DialogActions>\r\n            </Dialog>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data : state.data\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,{deleteScream})(withStyles(styles)(DeleteScream))\r\n","import React,{Fragment} from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport dayjs from 'dayjs'\r\nimport  {Link} from 'react-router-dom'\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.spreadThis,\r\n    commentImage: {\r\n        maxWidth : '100%',\r\n        objectFit : 'cover',\r\n        borderRadius : '50%'\r\n    }\r\n})\r\nfunction Comments({comments,classes}) {\r\n    return (\r\n       <Grid container>\r\n           {comments.map((comment) => {\r\n               const {createdAt,body,imageUrl,userHandle} = comment\r\n               return(\r\n                    <Fragment key = {createdAt}>\r\n                        <hr className = {classes.visibaleSeparator}/>\r\n                        <Grid item sm={12}>\r\n                        \r\n                            <Grid container>\r\n                                <Grid item sm={2}>\r\n                                    <img src= {imageUrl} alt = 'comment' className={classes.commentImage}></img>\r\n                                </Grid>\r\n                                <Grid item sm={9}>\r\n                                <Typography \r\n                                component = {Link}\r\n                                color = 'primary'\r\n                                varient = 'h5'\r\n                                to = {`users/${userHandle}`}\r\n                                >\r\n                                    @{userHandle}\r\n                                </Typography>\r\n                                <hr className = {classes.sepreator}/>\r\n                                <Typography variant= 'body2' >\r\n                                    {dayjs(createdAt).format('h:mm a,MMMM DD YYYY')}\r\n                                </Typography>\r\n                                <hr className = {classes.sepreator}/>\r\n                                <Typography variabt = 'body1'>\r\n                                    {body}\r\n                                </Typography>\r\n                                \r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Fragment>\r\n               )\r\n           })}\r\n       </Grid>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Comments)\r\n","import React ,{useState,useEffect}from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport {connect} from 'react-redux'\r\nimport {commentOnScream} from '../../redux/actions/dataAction'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nconst styles = (theme) => ({\r\n    ...theme.spreadThis,\r\n    progressSpinner: {\r\n        position: 'absolute'\r\n      },\r\n\r\n})\r\nfunction CommentFrom({classes,commentOnScream,authenticated,UI : {errors,loading},Screamid}) {\r\n    const [body, setBody] = useState('')\r\n    const commentData = {\r\n        body : body\r\n    }\r\n    const handlePostComment = (event) => {\r\n        event.preventDefault();\r\n        commentOnScream(Screamid,commentData)\r\n        setBody('')\r\n    }\r\n    let commentform  =  authenticated ? ( \r\n        <Grid item sm={12} style={{ textAlign: 'center' }}>\r\n        <form onSubmit={handlePostComment}>\r\n            <TextField\r\n                    className= {classes.textfield}\r\n                    id=\"body\"\r\n                    label=\"comment\"\r\n                    multiline\r\n                    row= \"3\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    placeholder = 'comment'\r\n                    value = {body}\r\n                    helperText={errors.comment}\r\n                    error = {errors.comment ? true : false}\r\n                    onChange = {(event) => setBody(event.target.value)} \r\n                />\r\n                <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                >\r\n                Submit\r\n                </Button>\r\n            </form>\r\n            </Grid>\r\n        ) : null \r\n    return commentform\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI : state.UI,\r\n    authenticated : state.user.authenticated\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    commentOnScream,\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionsToProps)(withStyles(styles)(CommentFrom))\r\n","import React,{Fragment} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport ToolButton from '../../utils/ToolButton'\r\nimport {Link} from 'react-router-dom'\r\nimport {likeScream,unlikeScream} from '../../redux/actions/dataAction'\r\n function LikeButton({user,Screamid,unlikeScream,likeScream,LikeCount}) {\r\n    const isLiked = () => {\r\n        if(user.likes && user.likes.find(like => like.Screamid === Screamid)){\r\n\r\n            return true\r\n        }else {\r\n            return false\r\n        }\r\n    }\r\n    \r\n    let likeButton = user.authenticated ? (\r\n        <Fragment>\r\n        {isLiked() ? (\r\n            <Fragment> \r\n            <ToolButton tip = 'unlike' onClick={() => unlikeScream(Screamid)}>\r\n                <FavoriteIcon color = 'primary' />\r\n            </ToolButton>\r\n            \r\n            </Fragment>\r\n        ) : (\r\n            <Fragment>\r\n            <ToolButton tip = 'like' onClick = {() => likeScream(Screamid)}>\r\n            <FavoriteBorderIcon color = 'primary' />\r\n            </ToolButton> \r\n            \r\n            </Fragment>  \r\n        ) } \r\n        </Fragment>\r\n\r\n    ) : (\r\n        <Fragment>\r\n        <ToolButton tip = 'login befor like'>\r\n            <Link to = '/login'>\r\n            <FavoriteBorderIcon color = 'primary' />\r\n            </Link>\r\n        </ToolButton>\r\n        </Fragment>\r\n    )\r\n    \r\n    return likeButton\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n  });\r\n  \r\n  const mapActionsToProps = {\r\n    likeScream,\r\n    unlikeScream\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n  )(LikeButton);\r\n\r\n\r\n","import React, {Fragment, useState , useEffect}from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {getScream , clearErrors} from '../../redux/actions/dataAction'\r\nimport withStyles from  '@material-ui/core/styles/withStyles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Comments from './Comments'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport dayjs from 'dayjs'\r\nimport CommentFrom from './CommentFrom'\r\n\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ToolButton from '../../utils/ToolButton'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore'\r\nimport { Typography } from '@material-ui/core'\r\nimport LikeButton from './LikeButton'\r\nimport CommentIcon from '@material-ui/icons/Comment'\r\n\r\n\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.spreadThis,\r\n      closeButton: {\r\n        position: 'absolute',\r\n        left: '91%',\r\n        top: '6%'\r\n      },\r\n      profileImage : {\r\n        maxWidth : '100%',\r\n        objectFit : 'cover',\r\n        borderRadius : '50%'\r\n      },\r\n      spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50\r\n      },\r\n     \r\n      dialogContent : {\r\n          padding : 20,\r\n      }\r\n\r\n\r\n})\r\n\r\nfunction ScreamDialog({classes,getScream,clearErrors,Screamid,scream : {body , createdAt , imageUrl , userHandle , likeCount , commentCount ,comments} ,UI : {loading , errors}}) {\r\n    const [open, setOpen] = useState(false)\r\n    \r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n        getScream(Screamid)\r\n    }\r\n    const handleClose = () => {\r\n        clearErrors()\r\n        setOpen(false)\r\n    }\r\n\r\n    const griddialog = loading ? (\r\n        <div className={classes.spinnerDiv}>\r\n        <CircularProgress size={200} thickness={2} />\r\n      </div> \r\n    ) : (\r\n        <Grid container spacing = {3}>\r\n            <Grid item sm = {5}>\r\n                <img src= {imageUrl} alt=\"profile\" className = {classes.profileImage}></img>\r\n            </Grid>\r\n            <Grid item sm = {7}>\r\n                <Typography \r\n                component = {Link}\r\n                color = 'primary'\r\n                varient = 'h5'\r\n                to = {`users/${userHandle}`}\r\n                >\r\n                    @{userHandle}\r\n                </Typography>\r\n                <hr className = {classes.sepreator}/>\r\n                <Typography variant= 'body2' >\r\n                    {dayjs(createdAt).format('h:mm a,MMMM DD YYYY')}\r\n                </Typography>\r\n                <hr className = {classes.sepreator}/>\r\n                <Typography variabt = 'body1'>\r\n                    {body}\r\n                </Typography>\r\n                <LikeButton Screamid={Screamid}  LikeCount={likeCount}/>\r\n                <span>{likeCount} Likes</span>\r\n                <ToolButton tip=\"comments\">\r\n                    <CommentIcon color=\"primary\" />\r\n                </ToolButton>\r\n                <span>{commentCount} comments</span>\r\n                <CommentFrom Screamid= {Screamid}></CommentFrom>  \r\n\r\n\r\n                \r\n            </Grid>\r\n\r\n            <Comments comments= {comments} />\r\n       </Grid>\r\n    )\r\n    \r\n   \r\n    \r\n    return (\r\n        <Fragment>\r\n            <ToolButton tip = 'about' place = 'top' onClick= {handleClickOpen}>\r\n                <UnfoldMore color= 'primary' />\r\n            </ToolButton>\r\n            <Dialog open={open} onClose={handleClose} fullWidth\r\n                aria-labelledby=\"form-dialog-title\">\r\n             <ToolButton\r\n            tip=\"Close\"\r\n            onClick={handleClose}\r\n            tipClassName={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n            </ToolButton>      \r\n            <DialogTitle id=\"form-dialog-title\">Scream Detail</DialogTitle>\r\n            \r\n            <DialogContent className={classes.dialogContent}>\r\n            {griddialog}\r\n\r\n            \r\n            </DialogContent>\r\n      </Dialog>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state) => ({\r\n    UI : state.UI,\r\n    scream : state.data.scream \r\n})\r\n\r\nconst mapActionsToProps = {\r\n    getScream,\r\n    clearErrors\r\n}\r\nexport default connect(mapStateToProps,mapActionsToProps)(withStyles(styles)(ScreamDialog))\r\n","import React from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {Link} from 'react-router-dom'\r\nimport dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\nimport DeleteScream from './DeleteScream'\r\nimport ScreamDialog from './ScreamDialog'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n//icon\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ToolButton from '../../utils/ToolButton'\r\nimport LikeButton from './LikeButton'\r\n\r\nconst style = {\r\n    card : {\r\n        position: 'relative',\r\n        display : 'flex',\r\n        marginBottom : 20,\r\n\r\n    },\r\n    image : {\r\n        minWidth : 200,\r\n        \r\n    },\r\n    content :{\r\n        padding : 25,\r\n        objectFit : 'cover',\r\n    }\r\n    \r\n}\r\n\r\nfunction Scream(props) {\r\n    const {classes,scream : {body , createdAt , imageUrl , userHandle , Screamid , likeCount , commentCount },user: {authenticated ,credentials : {handle} } } = props\r\n    dayjs.extend(relativeTime)\r\n    let deletButton = (authenticated && userHandle === handle) ? <DeleteScream Screamid = {Screamid} />: null\r\n    return (\r\n        <Card className= {classes.card}>\r\n               \r\n\r\n            <CardMedia image = {imageUrl}  title = 'Profile Image' className= {classes.image} />\r\n            <CardContent className = {classes.content}>\r\n            <Typography\r\n            variant=\"h5\"\r\n            component={Link}\r\n            to={`/users/${userHandle}`}\r\n            color=\"primary\"\r\n          >\r\n            {userHandle}\r\n          </Typography>\r\n                <span>{deletButton}</span>\r\n                <Typography variant = 'body2' color= 'textSecondary' >{dayjs(createdAt).fromNow()}</Typography>\r\n                <Typography variant = 'body1'>{body}</Typography>\r\n                <LikeButton Screamid={Screamid}  LikeCount={likeCount}/>\r\n                <span>{likeCount} Likes</span>\r\n                <ToolButton tip=\"comments\">\r\n                    <CommentIcon color=\"primary\" />\r\n                </ToolButton>\r\n                <span>{commentCount} comments</span>\r\n                <ScreamDialog Screamid = {Screamid} userHandle = {userHandle}></ScreamDialog>\r\n            </CardContent>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user : state.user\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(style)(Scream))\r\n","import {SET_ERRORS,SET_USER,LOADING_UI,CLEAR_ERRORS, SET_UNAUTHENTICATED,LOADING_USER,LOADING_DATA} from '../type'\r\nimport axios from 'axios'\r\n\r\nexport const loginUser = (userData,history) => (dispatch) => {\r\n    dispatch({type : LOADING_UI})\r\n\r\n    axios.post('https://us-central1-mysocialapp-92266.cloudfunctions.net/api/login',userData)\r\n        .then(res => {\r\n            \r\n            localStorage.setItem('FBIdToken',`Bearer ${res.data.token}`)\r\n            axios.defaults.headers.common['Authorization']= `Bearer ${res.data.token}`\r\n            dispatch(getUserData())\r\n            dispatch({\r\n                type : CLEAR_ERRORS\r\n            })\r\n            history.push('/')\r\n           \r\n        })\r\n        .catch(error => {\r\n            dispatch({\r\n                type : SET_ERRORS,\r\n                payload : error.response.data\r\n            })\r\n             \r\n        })\r\n}\r\n\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    dispatch({\r\n        type : LOADING_USER\r\n    })\r\n    axios.get('https://us-central1-mysocialapp-92266.cloudfunctions.net/api/user')\r\n        .then(res => {\r\n            \r\n            dispatch({\r\n                type : SET_USER,\r\n                payload : res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const signUp = (userData,history) => (dispatch) => {\r\n    dispatch({type : LOADING_UI})\r\n    axios.post('https://us-central1-mysocialapp-92266.cloudfunctions.net/api/signup',userData)\r\n        .then(res => {\r\n            localStorage.setItem('FBIdToken',`Bearer ${res.data.token}`)\r\n            axios.defaults.headers.common['Authorization']= `Bearer ${res.data.token}`\r\n            dispatch(getUserData())\r\n            dispatch({\r\n                type : CLEAR_ERRORS\r\n            })\r\n            history.push('/')\r\n           \r\n        })\r\n        .catch(error => {\r\n            dispatch({\r\n                type : SET_ERRORS,\r\n                payload : error.response.data\r\n            })\r\n             \r\n        })\r\n}\r\n\r\nexport const logOut = () => (dispatch)=> {\r\n    \r\n    localStorage.removeItem('FBIdToken')\r\n    delete axios.defaults.headers.common['Authorization']\r\n    dispatch({\r\n        type : SET_UNAUTHENTICATED\r\n    })\r\n}\r\n\r\nexport const uploadImage = (formData) => (dispatch) => {\r\n    dispatch({\r\n        type : LOADING_USER\r\n    })\r\n    axios.post('https://us-central1-mysocialapp-92266.cloudfunctions.net/api/user/uploadimage',formData)\r\n        .then(res => {\r\n            \r\n            dispatch(getUserData())\r\n        })\r\n        .catch(err => console.log(err))\r\n     \r\n}  \r\n\r\nexport const updateUserDetails = (userDetail) => (dispatch) => {\r\n    dispatch({\r\n        type : LOADING_USER\r\n    })\r\n    axios.post('https://us-central1-mysocialapp-92266.cloudfunctions.net/api/user',userDetail)\r\n        .then(res => {  \r\n            dispatch(getUserData())\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n","import React ,{Fragment,useState,useEffect} from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nimport {connect} from 'react-redux'\r\nimport {updateUserDetails} from '../../redux/actions/userAction'\r\n\r\n//Dialog\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//icons\r\n\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\nimport ToolButton from '../../utils/ToolButton'\r\n\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.spreadThis,\r\n    button: {\r\n       float : 'right'\r\n    }\r\n})\r\nfunction UpdateUserDetails({classes,credentials,updateUserDetails}) {\r\n    const [open, setOpen] = useState(false)\r\n    const [bio, setBio] = useState('')\r\n    const [location, setLocation] = useState('')\r\n    const [website, setWebsite] = useState('')\r\n    \r\n    const userDetail = {\r\n        bio : bio,\r\n        location : location,\r\n        website  : website\r\n    }\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        updateUserDetails(userDetail)\r\n        setOpen(false)\r\n    }\r\n    const updateState = (credentials) => {\r\n        setBio(credentials.bio)\r\n        setLocation(credentials.location)\r\n        setWebsite(credentials.website)\r\n    }\r\n    useEffect(() => {\r\n        updateState(credentials)     \r\n    },[credentials]) \r\n    \r\n    return (\r\n        <Fragment>\r\n            <ToolButton tip= 'Edit Bio' place = 'top' btnClassName= {classes.button} onClick = {handleClickOpen}>\r\n                <EditIcon color = 'primary'  />\r\n            </ToolButton>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Update Bio</DialogTitle>\r\n            <DialogContent>\r\n            <TextField\r\n                    className= {classes.textfield}\r\n                    id=\"bio\"\r\n                    label=\"bio\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    value = {bio}\r\n                    onChange = {(event) => setBio(event.target.value)} \r\n                />\r\n                <TextField\r\n                    className= {classes.textfield}\r\n                    id=\"location\"\r\n                    label=\"location\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    value = {location}\r\n                    onChange = {(event) => setLocation(event.target.value)} \r\n                />\r\n                <TextField\r\n                    className= {classes.textfield}\r\n                    id=\"website\"\r\n                    label=\"website\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    value = {website}\r\n                    onChange = {(event) => setWebsite(event.target.value)} \r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"outlined\" onClick={handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"outlined\" onClick={handleUpdate} color=\"primary\">\r\n                    Update\r\n                </Button>\r\n            </DialogActions>\r\n      </Dialog>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    credentials : state.user.credentials\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    updateUserDetails\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionsToProps)(withStyles(styles)(UpdateUserDetails))\r\n","import React, { Fragment } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport {Link} from 'react-router-dom'\r\nimport dayjs from 'dayjs'\r\nimport UpdateUserDetails from './UpdateUserDetails'\r\n\r\n//redux\r\nimport {connect } from 'react-redux'\r\nimport {uploadImage,logOut} from '../../redux/actions/userAction'\r\n\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\n//mui stuff\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\nimport MuiLink  from '@material-ui/core/Link'\r\n\r\nimport TypoGraphy from '@material-ui/core/Typography'\r\n\r\n//icon\r\nimport LocationOn from '@material-ui/icons/LocationOn'\r\nimport CalendarToday from '@material-ui/icons/CalendarToday'\r\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn'\r\nimport LinkIcon from '@material-ui/icons/Link'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\n\r\nimport ToolButton from '../../utils/ToolButton'\r\n\r\nconst styles = (theme) => ({\r\n   ...theme.spreadThis,\r\n})\r\nfunction Profile({\r\n        classes,\r\n        user : {\r\n            loading ,\r\n            authenticated,\r\n            credentials : {handle , createdAt , bio, imageUrl , website , location}\r\n        },\r\n        uploadImage,\r\n        logOut\r\n    }){\r\n        const handleImageChange =(event) => {\r\n            const image = event.target.files[0]\r\n            const formData = new FormData()\r\n            formData.append('image',image,image.name)\r\n            uploadImage(formData)\r\n\r\n        }\r\n        const handleEditPicture = () => {\r\n          document.getElementById('imageInput').click()\r\n\r\n        }\r\n        let profileMarkup = !loading ? (authenticated ? (\r\n        <Paper className = {classes.paper}>\r\n            <div className = {classes.profile}>\r\n                <div className = \"image-wrapper\">\r\n                    <img src = {imageUrl} className = \"profile-image\" alt = 'ProfileImage'></img>\r\n                    <input\r\n                     type = 'file'\r\n                     id = 'imageInput'\r\n                     hidden = 'hidden'\r\n                     onChange= {handleImageChange} \r\n                    />\r\n                    <ToolButton tip= 'Edit profile Image' place = 'top' btnClassName='button' onClick= {handleEditPicture}>\r\n                      <EditIcon color = 'primary' />\r\n                    </ToolButton>\r\n                   \r\n                   \r\n\r\n                </div>\r\n                <hr/>\r\n                <div className = 'profile-details'>\r\n                    <MuiLink component= {Link} to={`/users/${handle}`} color = 'primary' varient ='h5'>\r\n                        @{handle}\r\n                    </MuiLink>\r\n                    <hr/>\r\n                    {bio && <TypoGraphy variant= 'body2'>{bio}</TypoGraphy>}\r\n                    <hr/>\r\n                    {location && (\r\n                        <Fragment>\r\n                            <LocationOn color = 'primary' />\r\n                            <span>{location}</span>\r\n                            <hr />\r\n                        </Fragment>\r\n                    )}\r\n                     {website && (\r\n                        <Fragment>\r\n                            <LinkIcon color = 'primary' />\r\n                            <a href={website} target='_blank' rel = 'noopener noreferrer'>{' '}{website}</a>\r\n                            <hr />\r\n                        </Fragment>\r\n                    )}\r\n                    <CalendarToday color = 'primary'/>{' '}\r\n                     <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n\r\n                </div>\r\n                <ToolButton tip= 'logOut' place = 'top' onClick= {() => logOut()}>\r\n                    <KeyboardReturn color = 'primary'></KeyboardReturn>\r\n                </ToolButton>\r\n                <UpdateUserDetails />\r\n\r\n\r\n            </div>\r\n        </Paper> ):(\r\n        \r\n        <Paper className = {classes.paper}>\r\n            <TypoGraphy varient= 'body2' align = 'center'>\r\n                No profile found, please login again\r\n            </TypoGraphy>\r\n            <div className={classes.buttons}>\r\n                <Button variant= 'contained' color = 'primary' component={Link} to= '/login' >Login</Button>\r\n                <Button variant= 'contained' color = 'secondary' component={Link} to= '/signup' >SignUp</Button>\r\n\r\n            </div>\r\n\r\n        </Paper> \r\n        ) ):(\r\n          <Skeleton variant=\"rect\" animation=\"wave\" width={279} height={448} />)\r\n\r\n        \r\n        return profileMarkup \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user : state.user,\r\n \r\n})\r\n\r\nconst mapActionsToProps = { logOut, uploadImage };\r\n\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(Profile));\r\n","import React ,{useEffect}from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport Scream from '../components/scream/Scream'\r\nimport Profile from '../components/profile/Profile'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {getScreams} from '../redux/actions/dataAction'\r\n \r\nfunction Home({data : {screams,loading},getScreams}) {\r\n    useEffect(() => {\r\n        getScreams() \r\n       },[getScreams])\r\n    return (\r\n       <Grid container spacing={2} disable={true}>\r\n           <Grid item sm={8} xs = {12}>\r\n              {!loading ?(\r\n             screams.map((scream) => <Scream key ={scream.Screamid} scream = {scream} />)\r\n             ) : <p>loading.....</p>}\r\n            </Grid>\r\n            <Grid item sm={4} xs = {12}>\r\n                <Profile />\r\n            </Grid> \r\n       </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data : state.data,\r\n    \r\n})\r\n\r\nconst mapActionsToProps = {\r\n    getScreams\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionsToProps)(Home)\r\n","import React ,{useState}from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport withStyle from '@material-ui/core/styles/withStyles'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport LoginIcon from '../images/login.png'\r\nimport TypoGraphy from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\n//import redux stuff\r\nimport {connect } from 'react-redux'\r\nimport {loginUser} from '../redux/actions/userAction'\r\n\r\nconst style = (theme) => ({\r\n    ...theme.spreadThis\r\n})\r\nfunction Login({classes,history,loginUser,user,UI :{loading,errors}}) {\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword]=useState('')\r\n    \r\n    const userData = {\r\n        email : email,\r\n        password : password\r\n    }\r\n    \r\n    const handleSubmit = (event) => {\r\n        \r\n        event.preventDefault()\r\n        loginUser(userData,history)\r\n        \r\n    }\r\n    \r\n    return (\r\n        <Grid container className = {classes.form} >\r\n            <Grid item sm></Grid>\r\n            <Grid item sm >\r\n                <img src={LoginIcon} alt = 'login' className = {classes.image}></img> \r\n                <TypoGraphy variant='h3' >Login</TypoGraphy>\r\n                <form  noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <TextField\r\n                    className= {classes.textfield}\r\n                    id=\"email\"\r\n                    label=\"email\"\r\n                    type = 'email'\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    helperText={errors.email}\r\n                    error = {errors.email ? true : false}\r\n                    onChange = {(event) => setEmail(event.target.value)} \r\n                />\r\n                <TextField\r\n                    className= {classes.textfield}\r\n                    id=\"password\"\r\n                    label=\"password\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    helperText={errors.password}\r\n                    error = {errors.password ? true : false}\r\n                    onChange = {(event) => setPassword(event.target.value)} \r\n                />\r\n                \r\n                {errors.general && (\r\n                   <TypoGraphy variant='body2' color='error' className= {classes.general}>{errors.general}</TypoGraphy>\r\n                )}\r\n                <Button type='submit' variant='contained'  color= 'primary' className= {classes.button}>\r\n                {loading ? <CircularProgress color='secondary' size= {30} className = {classes.progress} /> : 'Login' }\r\n                </Button>\r\n                <br/>\r\n                <small>Don't have an account ? sign up<Link to = '/signup'>hear</Link></small>\r\n                </form>\r\n\r\n            </Grid>\r\n            <Grid item sm>\r\n                \r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n// Login.propTypes = {\r\n//     classes : PropTypes.object.isRequired,\r\n//     loginUser : PropTypes.func.isRequired,\r\n//     user : PropTypes.object.isRequired,\r\n//     UI : PropTypes.object.isRequired\r\n// }\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user : state.user,\r\n    UI : state.UI\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    loginUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyle(style)(Login))\r\n","import React ,{useState}from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport withStyle from '@material-ui/core/styles/withStyles'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport LoginIcon from '../images/login.png'\r\nimport TypoGraphy from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nimport  {connect} from 'react-redux'\r\nimport {signUp} from '../redux/actions/userAction'\r\nconst style = (theme) => ({\r\n    ...theme.spreadThis\r\n})\r\nfunction SignUp( {classes,history,UI :{loading,errors}}) {\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword]=useState('')\r\n    const [confirmPassword,setConfirmPassword] = useState('')\r\n    const [handle,setHandle]=useState('')\r\n\r\n    const userData = {\r\n        email : email,\r\n        password : password,\r\n        confirmPassword : confirmPassword,\r\n        handle : handle\r\n    }\r\n    \r\n    const handleSubmit = (event) => {\r\n        \r\n        event.preventDefault()\r\n        signUp(userData,history)\r\n        \r\n    }\r\n    \r\n    return (\r\n        <Grid container className = {classes.form} >\r\n            <Grid item sm></Grid>\r\n            <Grid item sm >\r\n                <img src={LoginIcon} alt = 'sign up' className = {classes.image}></img> \r\n                <TypoGraphy variant='h3' >SIgnUp</TypoGraphy>\r\n                <form  noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <TextField\r\n                    className= {classes.textfield}\r\n                    id=\"email\"\r\n                    label=\"email\"\r\n                    type = 'email'\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    helperText={errors.email}\r\n                    error = {errors.email ? true : false}\r\n                    onChange = {(event) => setEmail(event.target.value)} \r\n                />\r\n                <TextField\r\n                    className= {classes.textfield}\r\n                    id=\"username\"\r\n                    label=\"username\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    helperText={errors.handle}\r\n                    error = {errors.handle ? true : false}\r\n                    onChange = {(event) => setHandle(event.target.value)} \r\n                />\r\n                <TextField\r\n                    className= {classes.textfield}\r\n                    id=\"password\"\r\n                    label=\"password\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    helperText={errors.password}\r\n                    error = {errors.password ? true : false}\r\n                    onChange = {(event) => setPassword(event.target.value)} \r\n                />\r\n                <TextField\r\n                    className= {classes.textfield}\r\n                    id=\"confirmpassword\"\r\n                    label=\"confirmpassword\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    helperText={errors.confirmPassword}\r\n                    error = {errors.confirmPassword ? true : false}\r\n                    onChange = {(event) => setConfirmPassword(event.target.value)} \r\n                />\r\n                \r\n                {errors.general && (\r\n                   <TypoGraphy variant='body2' color='error' className= {classes.general}>{errors.general}</TypoGraphy>\r\n                )}\r\n                <Button type='submit' variant='contained'  color= 'primary' className= {classes.button}>\r\n                {loading ? <CircularProgress color='secondary' size= {30} className = {classes.progress} /> : 'SignUp' }\r\n                </Button>\r\n                <br/>\r\n                <small>Already have an account ? login <Link to = '/login'>hear</Link></small>\r\n                </form>\r\n\r\n            </Grid>\r\n            <Grid item sm>\r\n                \r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user : state.user,\r\n    UI : state.UI\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    signUp\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapActionsToProps)(withStyle(style)(SignUp))\r\n","import React, {Fragment, useState , useEffect}from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {postScream,clearErrors} from '../../redux/actions/dataAction'\r\nimport withStyles from  '@material-ui/core/styles/withStyles'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ToolButton from '../../utils/ToolButton'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.spreadThis,\r\n    submitButton: {\r\n        position: 'relative',\r\n        float: 'right',\r\n        marginTop: 10\r\n      },\r\n      progressSpinner: {\r\n        position: 'absolute'\r\n      },\r\n      closeButton: {\r\n        position: 'absolute',\r\n        left: '91%',\r\n        top: '6%'\r\n      }\r\n\r\n\r\n})\r\n\r\nfunction PostScream({classes,postScream,clearErrors,UI : {loading , errors}}) {\r\n    const [open, setOpen] = useState(false)\r\n    const [body,setBody] = useState('')\r\n    const userDetail = {\r\n       body : body\r\n    }\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    const handleClose = () => {\r\n        clearErrors()\r\n        setOpen(false)\r\n    }\r\n\r\n    const handlePostScream = (event) => {\r\n        \r\n        event.preventDefault();\r\n        postScream(userDetail)\r\n         \r\n        \r\n    }\r\n    useEffect(() => {\r\n        if(!errors.body && !loading){\r\n            setOpen(false)\r\n        }\r\n    },[loading,errors]) \r\n    \r\n    \r\n    return (\r\n        <Fragment>\r\n            <ToolButton tip = 'add Post' place = 'top' onClick= {handleClickOpen}>\r\n                <AddIcon color= 'primary' />\r\n            </ToolButton>\r\n            <Dialog open={open} onClose={handleClose} fullWidth\r\n                maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\r\n             <ToolButton\r\n            tip=\"Close\"\r\n            onClick={handleClose}\r\n            tipClassName={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n            </ToolButton>      \r\n            <DialogTitle id=\"form-dialog-title\">Post Scream</DialogTitle>\r\n            \r\n            <DialogContent>\r\n            <form onSubmit={handlePostScream}>\r\n            <TextField\r\n                    className= {classes.textfield}\r\n                    id=\"body\"\r\n                    label=\"body\"\r\n                    multiline\r\n                    row= \"3\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    placeholder = 'Screems for your buddy'\r\n                    helperText={errors.body}\r\n                    error = {errors.body ? true : false}\r\n                    onChange = {(event) => setBody(event.target.value)} \r\n                />\r\n                <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submitButton}\r\n                disabled={loading}\r\n              >\r\n                Submit\r\n                {loading && (\r\n                  <CircularProgress\r\n                    size={30}\r\n                    className={classes.progressSpinner}\r\n                  />\r\n                )}\r\n              </Button>\r\n            </form>\r\n            </DialogContent>\r\n      </Dialog>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state) => ({\r\n    UI : state.UI,\r\n    \r\n})\r\n\r\nconst mapActionsToProps = {\r\n    postScream,\r\n    clearErrors\r\n}\r\nexport default connect(mapStateToProps,mapActionsToProps)(withStyles(styles)(PostScream))\r\n","import React,{Fragment} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport {connect} from 'react-redux'\r\nimport ToolButton from '../../utils/ToolButton'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport Notifictions from '@material-ui/icons/Notifications'\r\nimport PostScream from '../scream/PostScream'\r\n\r\nfunction NavaBar({authenticated,postScream}) {\r\n    \r\n    return (\r\n       <AppBar>\r\n           <Toolbar className= 'nav-container'>\r\n                {authenticated ? (\r\n                    <Fragment>\r\n                    <Link to=\"/\">\r\n                    <ToolButton tip = 'Home' place = 'top'>\r\n                        <HomeIcon color = 'secondary'></HomeIcon>\r\n                    </ToolButton>\r\n                    </Link>\r\n                    <PostScream />\r\n                    <ToolButton tip = 'Notifictions' place = 'top'>\r\n                        <Notifictions color = 'secondary'></Notifictions>\r\n                    </ToolButton>  \r\n                    </Fragment>\r\n                ) : (\r\n                    <Fragment>\r\n                    <Button color='inherit'  component = {Link} to = '/'>Home</Button>\r\n                    <Button color='inherit'  component = {Link} to = '/login'>Login</Button>\r\n                    <Button color='inherit'  component = {Link} to = '/signup'>SignUp</Button>\r\n                    </Fragment>\r\n                )}\r\n               </Toolbar>\r\n       </AppBar>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated : state.user.authenticated\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(NavaBar)\r\n","import React from 'react'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AuthRoute = ({component : Component,authenticated,...rest})  => (\r\n    <Route {...rest} render ={(props) =>  authenticated ?  <Redirect to='/' /> : <Component {...props} />  } />\r\n    \r\n)\r\n\r\nconst  mapStateToProps  = (state) => ({\r\n    authenticated : state.user.authenticated\r\n})\r\n\r\nAuthRoute.propTypes = {\r\n    authenticated : PropTypes.object.isRequired\r\n}\r\nexport default connect(mapStateToProps)(AuthRoute)\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\n// MUI\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n// Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadThis,\r\n});\r\n\r\nconst StaticProfile = (props) => {\r\n  const {\r\n    classes,\r\n    profile: { handle, createdAt, imageUrl, bio, website, location }\r\n  } = props;\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div className={classes.profile}>\r\n        <div className=\"image-wrapper\">\r\n          <img src={imageUrl} alt=\"profile\" className=\"profile-image\" />\r\n        </div>\r\n        <hr />\r\n        <div className=\"profile-details\">\r\n          <MuiLink\r\n            component={Link}\r\n            to={`/users/${handle}`}\r\n            color=\"primary\"\r\n            variant=\"h5\"\r\n          >\r\n            @{handle}\r\n          </MuiLink>\r\n          <hr />\r\n          {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n              <hr />\r\n          {location && (\r\n            <Fragment>\r\n              <LocationOn color=\"primary\" /> <span>{location}</span>\r\n              <hr />\r\n            </Fragment>\r\n          )}\r\n          {website && (\r\n            <Fragment>\r\n              <LinkIcon color=\"primary\" />\r\n              <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {' '}\r\n                {website}\r\n              </a>\r\n              <hr />\r\n            </Fragment>\r\n          )}\r\n          <CalendarToday color=\"primary\" />{' '}\r\n          <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nStaticProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(StaticProfile);","import React ,{useEffect,useState}from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport axios from 'axios'\r\nimport Scream from '../components/scream/Scream'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {getUserData} from '../redux/actions/dataAction'\r\n import StaticProfile from '../components/profile/StaticProfile'\r\n\r\nfunction User(props) {\r\n    const {data : {screams,loading} ,getUserData} = props\r\n    const [profile,setProfile] = useState({})\r\n    useEffect(() => {\r\n        const handle = props.match.params.handle\r\n        getUserData(handle)\r\n        axios.get(`/user/${handle}`)\r\n        .then((res) => {\r\n            setProfile(res.data.user)\r\n        })\r\n      .catch((err) => console.log(err));\r\n       },[])\r\n\r\n    return (\r\n       <Grid container spacing={2} disable={true}>\r\n           <Grid item sm={8} xs = {12}>\r\n              {!loading ? screams === null ? (<p>user has not posted any scram yet</p>)  : (\r\n             screams.map((scream) => <Scream key ={scream.Screamid} scream = {scream} />)\r\n             ) : <p>loading.....</p>}\r\n            </Grid>\r\n            <Grid item sm={4} xs = {12}>\r\n                <StaticProfile profile = {profile} />\r\n            </Grid>  \r\n       </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data : state.data,\r\n    \r\n})\r\n\r\nconst mapActionsToProps = {\r\n    getUserData\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionsToProps)(User)\r\n","import {SET_USER, SET_AUTHENTICATED,SET_UNAUTHENTICATED,LOADING_USER,LIKE_SCREAM, UNLIKE_SCREAM} from '../type'\r\n\r\nconst initialState = {\r\n    authenticated : false,\r\n    loading :false,\r\n    credentials : {},\r\n    likes : [],\r\n    notifications : []\r\n}\r\nfunction UserReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated : true\r\n            }\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState\r\n        \r\n        case SET_USER:\r\n            return {\r\n                loading : false,\r\n                authenticated : true,\r\n                ...action.payload\r\n            }\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading : true\r\n            }\r\n        case LIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes : [\r\n                    ...state.likes,\r\n                    {\r\n                        userHandle : state.credentials.handle,\r\n                        Screamid : action.payload.Screamid\r\n                    }\r\n                ]\r\n            }\r\n        case UNLIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes : state.likes.filter(\r\n                    like => like.Screamid !== action.payload.Screamid\r\n                )\r\n            }\r\n        default:\r\n            return state\r\n            \r\n    }\r\n}\r\n\r\nexport default UserReducer","import {SET_ERRORS,LOADING_UI, CLEAR_ERRORS, STOP_LOADING_UI} from '../type'\r\n\r\nconst initialState = {\r\n    loading : false,\r\n    errors : {}\r\n}\r\n\r\nfunction uiReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                errors : action.payload\r\n            }\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading : true,\r\n            }\r\n        \r\n        case STOP_LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return initialState\r\n        default:\r\n            return state\r\n            \r\n    }\r\n}\r\nexport default uiReducer","import  {LOADING_DATA,COMMENT_SCREAM,UNCOMMENT_SCREAM,LIKE_SCREAM,UNLIKE_SCREAM,SET_SCREAMS,DELETE_SCREAM,POST_SCREAM,SET_SCREAM} from '../type'\r\n\r\nconst initialState = {\r\n    loading : false,\r\n    screams : [],\r\n    scream : {}\r\n}\r\n\r\nfunction dataReducer(state=initialState,action){\r\n    switch(action.type){\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading : true\r\n            }\r\n        case LIKE_SCREAM:\r\n        case UNLIKE_SCREAM:\r\n            let index = state.screams.findIndex(scream => scream.Screamid === action.payload.Screamid)\r\n            state.screams[index] = action.payload\r\n            if(state.scream.Screamid === action.payload.Screamid){\r\n                state.scream = action.payload\r\n            }\r\n            return {\r\n                ...state,       \r\n            }\r\n        case SET_SCREAMS:\r\n            return {\r\n                ...state,\r\n                screams : action.payload,\r\n                loading : false,\r\n                \r\n            }\r\n        case DELETE_SCREAM:\r\n              return {\r\n                ...state,\r\n                screams : state.screams.filter(\r\n                    scream => scream.Screamid !== action.payload\r\n                )\r\n              }\r\n        case POST_SCREAM:\r\n            return{\r\n                ...state,\r\n                screams : [\r\n                    action.payload,\r\n                    ...state.screams,\r\n\r\n                ]\r\n            }\r\n        case SET_SCREAM : \r\n            return{\r\n                ...state,\r\n                scream : action.payload\r\n            }\r\n        case COMMENT_SCREAM:\r\n            return {\r\n                ...state,\r\n                scream: {\r\n                  ...state.scream,\r\n                  comments: [action.payload, ...state.scream.comments]\r\n                }\r\n            }    \r\n        default:\r\n             return state\r\n\r\n    }\r\n}\r\n\r\nexport default dataReducer","import {createStore,combineReducers,applyMiddleware,compose} from 'redux'\r\nimport thunk from  'redux-thunk'\r\n\r\nimport UserReducer from './reducers/UserReducer'\r\nimport uiReducer from './reducers/uiReducer'\r\nimport dataReducer from './reducers/dataReducer'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst  reducers = combineReducers({\r\n    user : UserReducer,\r\n    UI : uiReducer,\r\n    data : dataReducer,\r\n})\r\n\r\nconst store = createStore(reducers,initialState,compose(applyMiddleware(...middleware),window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\r\n\r\nexport default store","import React from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport SignUp from './pages/SignUp';\nimport NavaBar from './components/layout/NavaBar';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\nimport themeFile from './utils/theme'\nimport AuthRoute from './utils/AuthRoute'\nimport JwtDecode from 'jwt-decode'\nimport User from './pages/User'\n\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nimport {SET_AUTHENTICATED,SET_UNAUTHENTICATED} from './redux/type'\nimport {logOut,getUserData} from './redux/actions/userAction'\n\nconst token = localStorage.FBIdToken;\nif (token){\n  const decodedToken = JwtDecode(token)\n  if (decodedToken.exp * 1000 < Date.now()){\n    alert()\n    store.dispatch(logOut())\n    store.dispatch({\n      type : SET_UNAUTHENTICATED\n    })\n    window.location.href = '/login'\n  }\n  else{\n    store.dispatch({\n      type : SET_AUTHENTICATED\n    })\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n    \n  }\n}\n\nconst theme = createMuiTheme(themeFile)\nfunction App() {\n  \n \n  return (\n  <MuiThemeProvider theme={theme}>\n    <Provider store = {store}>\n    \n       <Router>\n          <NavaBar />\n          <div className='container'>\n          <Switch>\n              <Route exact path='/'   component={Home}/>\n              <AuthRoute exact path='/login' component={Login} />\n              <AuthRoute exact path='/signup' component={SignUp}  />  \n              <Route  exact path= '/users/:handle' component= {User} />\n              <Route  exact path= '/users/:handle/scream/:Screamid' component= {User} />\n          </Switch>\n          </div>\n       </Router>\n  \n    </Provider>\n  </MuiThemeProvider>\n  )\n} \n\nexport default App;\n","export default {\r\n\r\n        palette: {\r\n          primary: {\r\n            light: '#757ce8',\r\n            main: '#3f50b5',\r\n            dark: '#002884',\r\n            contrastText: '#fff',\r\n          },\r\n          secondary: {\r\n            light: '#ff7961',\r\n            main: '#f44336',\r\n            dark: '#ba000d',\r\n            contrastText: '#000',\r\n          },\r\n        },\r\n\r\n    spreadThis:{\r\n        typography:{\r\n            useNextVarients : true\r\n        },\r\n        form:{\r\n            textAlign : 'center'\r\n        } ,\r\n        image:{\r\n            margin : '20px auto 20px auto',\r\n            width : 50,\r\n            height : 50,\r\n    \r\n        },\r\n        pagetitle : {\r\n            margin :\"20px auto 20px auto\",\r\n    \r\n        },\r\n        textfield:{\r\n           margin :\"10px auto 10px auto\",\r\n           \r\n    \r\n        },\r\n        button:{\r\n            margin :\"10px 20px 10px auto\",\r\n            width : '50%'\r\n        },\r\n        progress:{\r\n        },\r\n        sepreator : {\r\n            border : 'none',\r\n            margin : 5\r\n        } ,\r\n        visibaleSeparator : {\r\n           width : '100%',\r\n           borderBottom : '1px solid rgb(0,0,0,0.1)',\r\n           marginBottom : 20\r\n        },\r\n        paper: {\r\n            margin : 'auto 10px auto 10px',\r\n            \r\n            padding : '5%'\r\n            },\r\n            profile: {\r\n              '& .image-wrapper': {\r\n                textAlign: 'center',\r\n                position: 'relative',\r\n                '& button': {\r\n                  position: 'absolute',\r\n                  top: '80%',\r\n                  left: '70%'\r\n                }\r\n              },\r\n              '& .profile-image': {\r\n                width: 200,\r\n                height: 200,\r\n                objectFit: 'cover',\r\n                maxWidth: '100%',\r\n                borderRadius: '50%'\r\n              },\r\n              '& .profile-details': {\r\n                textAlign: 'center',\r\n                '& span, svg': {\r\n                  verticalAlign: 'middle'\r\n                },\r\n                '& a': {\r\n                  color: '#00bcd4'\r\n                }\r\n              },\r\n              '& hr': {\r\n                border: 'none',\r\n                margin: '0 0 10px 0'\r\n              },\r\n              '& svg.button': {\r\n                '&:hover': {\r\n                  cursor: 'pointer'\r\n                }\r\n              }\r\n            },\r\n            buttons: {\r\n              textAlign: 'center',\r\n              '& a': {\r\n                margin: '20px 10px'\r\n              }\r\n            }\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/login.8a4053ac.png\";"],"sourceRoot":""}